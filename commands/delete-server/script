#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: gogrid:delete-server: "Delete a GoGrid server"
#/ usage: rerun gogrid:delete-server  --server-name <>  --apikey <>  --secret <> 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh delete-server || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: gogrid:delete-server. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: SERVER_NAME APIKEY SECRET

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

METHOD="/grid/server/delete?name=${SERVER_NAME}"

rerun gogrid:api --apikey "${APIKEY}" --secret "${SECRET}" --method "${METHOD}"

#rerun gogrid:get-server --apikey KEY --secret SECRET --server-name mycentos62-64  | jq -r '.list[].state.name'
#could be On, Off, but then will result in error when it does not exist
#state:On
#state:On
#state:On
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:Off
#state:ERROR: ERROR getURL https://api.gogrid.com/api/grid/server/get?name=mycentos62-64&sig=488b6c379409ce1b8be68b6d9c8fcfe1&format=json&v=1.9&api_key=9a08f45afc8dc59e
#ERROR: *** command failed: gogrid:get-server. ***

# Done. Exit with last command exit status.
exit $?

